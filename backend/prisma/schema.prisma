// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String?
  password String
  posts    Post[]
  likes    Like[]
  comments Comment[] 
  createdAt DateTime @default(now()) // Added for consistency
}


model Post {
  id String @id @default(uuid())
  title String
  content String
  published Boolean @default(false)
  author User @relation(fields: [authorid], references: [id])
  authorid String

  likes     Like[]      // Relationship for likes
  comments  Comment[]   // Relationship for comments
}


model Like {
  id      String   @id @default(uuid())
  post    Post     @relation(fields: [postId], references: [id])
  postId  String
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  parent    Comment? @relation("ParentChild", fields: [parentId], references: [id])
  parentId  String?
  children  Comment[] @relation("ParentChild")
  createdAt DateTime @default(now())
}